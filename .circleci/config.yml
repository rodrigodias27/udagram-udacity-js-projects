version: 2.1

orbs:
  node: circleci/node@4.9.0
  aws-cli: circleci/aws-cli@1.3.1
  eb: circleci/aws-elastic-beanstalk@2.0.1

executors:
  docker-node-awscli:
    docker:
      - image: cimg/base:stable

jobs:
  install-frontend:
    executor: docker-node-awscli
    working_directory: ~/udagram
    steps:
      - node/install
      - checkout
      - run:
          name: Front-End Install
          command: npm run frontend:install
      - persist_to_workspace:
          root: ~/udagram
          paths:
            - ./

  test-frontend:
    executor: docker-node-awscli
    working_directory: ~/udagram
    steps:
      - node/install
      - attach_workspace:
          at: ~/udagram
      - run:
          name: Front-End Test
          command: echo 'Test'

  build-and-deploy-frontend-prod:
    executor: docker-node-awscli
    working_directory: ~/udagram
    steps:
      - node/install
      - aws-cli/setup
      - attach_workspace:
          at: ~/udagram
      - run:
          name: Front-End Build Prod
          command: |
            export NODE_OPTIONS=--openssl-legacy-provider && npm run frontend:build:prod
      - run:
          name: Deploy App Prod
          command: |
            npm run frontend:deploy:prod

  build-and-deploy-frontend-stg:
    executor: docker-node-awscli
    working_directory: ~/udagram
    steps:
      - node/install
      - aws-cli/setup
      - attach_workspace:
          at: ~/udagram
      - run:
          name: Front-End Build Staging
          command: |
            export NODE_OPTIONS=--openssl-legacy-provider && npm run frontend:build:stg
      - run:
          name: Deploy App Staging
          command: |
            npm run frontend:deploy:stg

  install-backend:
    executor: docker-node-awscli
    working_directory: ~/udagram
    steps:
      - node/install
      - checkout
      - run:
          name: Back-End Install
          command: npm run backend:install
      - persist_to_workspace:
          root: ~/udagram
          paths:
            - ./

  test-backend:
    executor: docker-node-awscli
    working_directory: ~/udagram
    steps:
      - node/install
      - attach_workspace:
          at: ~/udagram
      - run:
          name: Back-End Test
          command: echo 'Test'

  build-and-deploy-backend-prod:
    executor: docker-node-awscli
    working_directory: ~/udagram
    steps:
      - node/install
      - aws-cli/setup
      - eb/setup
      - attach_workspace:
          at: ~/udagram
      - run:
          name: Back-End Build Prod
          command: |
            npm run backend:build
      - run:
          name: Deploy App Prod
          command: |
            cd ~/udagram/udagram-api/www
            eb init $APPLICATION_NAME -r $AWS_DEFAULT_REGION -p $EB_PLATFORM
            eb use $EB_ENV_NAME_PROD
            eb deploy $EB_ENV_NAME_PROD
            eb status $EB_ENV_NAME_PROD

  build-and-deploy-backend-stg:
    executor: docker-node-awscli
    working_directory: ~/udagram
    steps:
      - node/install
      - aws-cli/setup
      - eb/setup
      - attach_workspace:
          at: ~/udagram
      - run:
          name: Back-End Build Staging
          command: |
            npm run backend:build
      - run:
          name: Deploy App Staging
          command: |
            cd ~/udagram/udagram-api/www
            eb init $APPLICATION_NAME -r $AWS_DEFAULT_REGION -p $EB_PLATFORM
            eb use $EB_ENV_NAME_STG
            eb deploy $EB_ENV_NAME_STG
            eb status $EB_ENV_NAME_STG


workflows:
  version: 2
  test-and-deploy-stg:
    jobs:
      - install-backend:
          filters:
            branches:
              ignore:
                - main
      - install-frontend:
          filters:
            branches:
              ignore:
                - main
      - test-backend:
          requires:
            - install-backend
          filters:
            branches:
              ignore:
                - main
      - test-frontend:
          requires:
            - install-frontend
          filters:
            branches:
              ignore:
                - main
      - build-and-deploy-backend-stg:
          requires:
            - test-backend
          filters:
            branches:
              ignore:
                - main
      - build-and-deploy-frontend-stg:
          requires:
            - test-frontend
          filters:
            branches:
              ignore:
                - main

  deploy-prod:
    jobs:
      - install-backend:
          filters:
            branches:
              only:
                - main
      - install-frontend:
          filters:
            branches:
              only:
                - main
      - build-and-deploy-backend-prod:
          requires:
            - install-backend
          filters:
            branches:
              only:
                - main
      - build-and-deploy-frontend-prod:
          requires:
            - install-frontend
          filters:
            branches:
              only:
                - main
